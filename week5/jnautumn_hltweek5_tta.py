# -*- coding: utf-8 -*-
"""jnautumn_hltweek5_tta.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1xHP3R6cS0L067M6ZqPUlXqGXoGxRL-fX
"""

import pandas as pd
import altair as alt
from vega_datasets import data
from altair.expr import datum

data = pd.read_csv("water_potability.csv")
data = data.drop(["Solids", "Chloramines", "Sulfate", "Conductivity", "Organic_carbon", "Trihalomethanes", "Turbidity", "Potability"], axis=1)
data

chart1= alt.Chart(data).transform_window(
    cumulative_count="count()",
    sort=[{"field": "ph"}],
).mark_tick().encode(
    x="ph:Q",
    y="cumulative_count:Q"
    ).properties(
        title="pH Values"
    )

chart2= alt.Chart(data).transform_window(
    cumulative_count="count()",
    sort=[{"field": "Hardness"}],
).mark_tick().encode(
    x="Hardness:Q",
    y="cumulative_count:Q"
).properties(
    title="Water Hardness in mg/L"
)

alt.hconcat(chart1, chart2)

baselayer = alt.Chart(data).mark_rect().encode(
    alt.X('Hardness:Q', bin=True),
    alt.Y('ph:Q', bin=True),
    alt.Color('count()', scale=alt.Scale(scheme='darkgold'))
    )
dots = alt.Chart(data).mark_circle(
    color='black',
    size=5,
).encode(
    x='Hardness:Q',
    y='ph:Q',
)

baselayer + dots

final = alt.Chart(data).mark_bar().encode(
    x='ph',
    y='Hardness',
)

final+final.transform_regression('ph', 'Hardness',extent=[0,16]).mark_line(color="red")

"""A study investigating the relationship between water pH and water hardness. The data used was from a synthetic dataset investigating a hypothetical relationship between the safety of drinking water samples from an unknown location, its mineral contents, and pH. The expected outcome was a positive correlation between pH and water hardness, which was shown. Irrelevant data to this study was dropped to speed up the code.

While originally a line chart, I found the tick chart to be a slightly better visual approach as higher concentrations of counts in the upper cumulative values were more noticeable and made it easier to initially determine there was a positive correlation between the dataframes. However, the data required a layered approach to confirm. This was naturally suited to a heatmap, but as shown above the correlation wasn't easily identifiable even after changing the colour scheme to suit my dark room: the highest count was more towards the lower-mid end of the X axis despite a clear upwards trend plotted nearby. Using the transform_regression function allowed me to layer a line on top of a bar chart to more clearly illustrate the upwards trend along with a slight line extension to confirm this would be expected to carry on.



"""